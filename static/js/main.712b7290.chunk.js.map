{"version":3,"sources":["components/Button/ButtonStyled.js","components/Button/Button.jsx","components/Header/HeaderStyled.js","components/Points/PointsStyled.js","components/Points/Points.jsx","components/Header/Header.jsx","components/SongResult/SongResultStyled.js","components/SongResult/SongResult.jsx","components/SongListItem/SongListItemStyled.js","components/SongListItem/SongListItem.jsx","components/SongList/SongListStyled.js","components/SongList/SongList.jsx","redux/constants.js","redux/actions.js","AppStyled.js","components/RecordButton/RecordButtonStyled.js","components/RecordButton/RecordButton.jsx","App.jsx","Theme.jsx","redux/reducers.js","redux/store.js","index.jsx"],"names":["ButtonStyled","styled","button","primary","theme","color","colors","textPrimary","dark","Button","props","children","defaultProps","HeaderStyled","header","HeaderTitle","h1","PointsStyled","span","Points","useSelector","state","maximumRounds","currentRound","maximumTries","currentTry","gameResult","points","reduce","accumulator","currentValue","Header","SongResultBox","div","FrameBox","InfoBox","SongInfo","AlbumInfo","textSecondary","SongName","SongArtist","SongResult","currentSong","deezerId","artist","songName","album","title","scrolling","frameBorder","allowTransparency","src","width","height","SongListItemStyled","li","Image","img","Link","a","ColumeDiv","RowDiv","SongListItem","data","songImage","deezerLink","target","href","alt","SongListStyled","ul","SongList","songList","map","song","key","SCREENS","ACTION_TYPE","SET_SONG_OBJECT_IN_LIST","SET_CURRENT_SONG_OBJECT","SET_SCREEN","DEZEER_ERROR","RESET_DEZEER_ERROR","SET_GAME_RESULT","SET_CURRENT_TRY","SET_CURRENT_ROUND","RESET_STORE","accestTokken","setCurrentScreen","screenId","type","payload","setCurrentSong","pushSongInSongList","setCurrentTry","setCurrentRound","MainContainer","main","MainTitle","h2","MainSubtitle","GameContainer","AnswerContainer","InputContainer","ResultContainer","RecordButtonStyled","pink","MicroIcon","svg","Path","path","RecordButtonContainer","RecordButton","isRecord","autoplay","options","animationData","rendererSettings","preserveAspectRatio","viewBox","fill","xmlns","fillRule","clipRule","d","App","useState","setIsRecord","screen","curentScreen","isDeezerError","dispatch","useDispatch","userAnswered","answer","recordVoice","recorder","MicRecorder","bitRate","start","then","setTimeout","stop","getMp3","buffer","blob","file","File","lastModified","Date","now","callBack","formData","FormData","set","axios","method","url","headers","response","result","deezer","link","id","cover_small","catch","err","getSongByHumming","error","console","screenTitleHandler","currentScreen","onClick","length","window","open","screenHandler","size","green","red","lightDark","text","fontFamily","device","mobile","tablet","laptop","desktop","wideScreen","initialState","songValueInInput","createStore","action","newGameResult","push","Object","keys","newSongList","unshift","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"ygBAEA,IAaaA,EAAeC,UAAOC,OAAV,KAErB,qBAAGC,SAA0B,kBAIjB,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAAsBD,EAAME,OAAOD,MACxC,gBAAGD,EAAH,EAAGA,MAAH,SAAUD,QAAyBC,EAAME,OAAOC,YAAcH,EAAME,OAAOE,QApBrE,SAAC,GAChB,OAD8B,EAAZH,OAEhB,IAAK,QACH,MAAO,oDACT,IAAK,MACH,MAAO,oDACT,IAAK,OAEL,QACE,MAAO,wDCPAI,EAAS,SAAAC,GAAK,OAAI,kBAACV,EAAiBU,EAAQA,EAAMC,W,8TAQ/DF,EAAOG,aAAe,CACpBP,MAAO,OACPF,SAAS,GCZJ,IAAMU,EAAeZ,UAAOa,OAAV,KAOZC,EAAcd,UAAOe,GAAV,KAEb,qBAAGZ,MAAkBE,OAAOC,e,iICThC,IAAMU,EAAehB,UAAOiB,KAAV,KAEd,qBAAGd,MAAkBE,OAAOC,eCA1BY,EAAS,WAAO,IAAD,EACoDC,aAAY,SAAAC,GACxF,MAAO,CACLC,cAAeD,EAAMC,cACrBC,aAAcF,EAAME,aACpBC,aAAcH,EAAMG,aACpBC,WAAYJ,EAAMI,WAClBC,WAAYL,EAAMK,eANdJ,EADkB,EAClBA,cAAeC,EADG,EACHA,aAUjBI,GAXoB,EACWH,aADX,EACyBC,WADzB,EACqCC,WAUrCE,QAAO,SAACC,EAAaC,GAC7C,OAAIA,EACKD,EAAc,EAEhBA,IACN,IACH,OACE,kBAACZ,EAAD,mBACcU,EADd,gBACmCJ,EAAe,EADlD,IACsDD,ICnB7CS,EAAS,WACpB,OACE,kBAAClB,EAAD,KACE,kBAACE,EAAD,iBACA,kBAAC,EAAD,Q,osCCNC,IAAMiB,EAAgB/B,UAAOgC,IAAV,KAQbC,EAAWjC,UAAOgC,IAAV,KASRE,EAAUlC,UAAOgC,IAAV,KASPG,EAAWnC,UAAOgC,IAAV,KAORI,EAAYpC,UAAOgC,IAAV,KAIX,qBAAG7B,MAAkBE,OAAOgC,iBAI1BC,EAAWtC,UAAOiB,KAAV,KACV,qBAAGd,MAAkBE,OAAOC,eAK1BiC,EAAavC,UAAOiB,KAAV,KACZ,qBAAGd,MAAkBE,OAAOgC,iBC9C1BG,EAAa,WACxB,IAAMC,EAActB,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,eACvCC,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,OAAQC,EAAoBH,EAApBG,SAAUC,EAAUJ,EAAVI,MACpC,OACE,kBAACd,EAAD,KACE,kBAACE,EAAD,KACE,4BACEa,MAAM,SACNC,UAAU,KACVC,YAAY,IACZC,kBAAkB,OAClBC,IAAG,qKAAgKR,EAAhK,aACHS,MAAM,MACNC,OAAO,SAGX,kBAAClB,EAAD,KACE,kBAACC,EAAD,KACE,kBAACG,EAAD,KAAWM,GACX,kBAACL,EAAD,KAAaI,IAEf,kBAACP,EAAD,KACE,wCACA,8BAAOS,O,o9BCzBV,IAAMQ,EAAqBrD,UAAOsD,GAAV,KAYb,qBAAGnD,MAAkBE,OAAOE,QAMjCgD,EAAQvD,UAAOwD,IAAV,KAKLC,EAAOzD,UAAO0D,EAAV,KACN,qBAAGvD,MAAkBE,OAAOC,eAI1BqD,EAAY3D,UAAOgC,IAAV,KAOT4B,EAAS5D,UAAOgC,IAAV,KClCN6B,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrBlB,EAAmDkB,EAAnDlB,SAAUC,EAAyCiB,EAAzCjB,MAAOF,EAAkCmB,EAAlCnB,OAAQoB,EAA0BD,EAA1BC,UAAWC,EAAeF,EAAfE,WAE5C,OACE,kBAACP,EAAD,CAAMQ,OAAO,SAASC,KAAMF,GAC1B,kBAACX,EAAD,KACE,kBAACO,EAAD,KACE,kBAACL,EAAD,CAAOL,IAAKa,EAAWI,IAAKvB,IAC5B,kBAACe,EAAD,KACE,8BAAOf,GACP,8BAAOC,KAGX,8BAAOF,M,oNCdR,IAAMyB,EAAiBpE,UAAOqE,GAAV,KCGdC,EAAW,WACtB,IAAMC,EAAWpD,aAAY,SAAAC,GAAK,OAAIA,EAAMmD,YAO5C,OAAO,kBAACH,EAAD,KAAgCG,EAJ1BC,KAAI,SAAAC,GACb,OAAO,kBAAC,EAAD,CAAcC,IAAKD,EAAK/B,SAAUoB,KAAMW,S,kBCExCE,GACE,cADFA,GAEE,cAFFA,GAGI,gBAGFC,GAlBK,CAClBC,wBAAyB,0BACzBC,wBAAyB,0BACzBC,WAAY,aACZC,aAAc,eACdC,mBAAoB,qBACpBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,kBAAmB,oBACnBC,YAAa,eCNTC,GAAe,mCAuDRC,GAAmB,SAAAC,GAC9B,MAAO,CAAEC,KAAMb,GAAYG,WAAYW,QAASF,IAKrCG,GAAiB,SAAAlB,GAAI,MAAK,CAAEgB,KAAMb,GAAYE,wBAAyBY,QAASjB,IAEhFmB,GAAqB,iBAAO,CAAEH,KAAMb,GAAYC,0BAEhDgB,GAAgB,SAAAH,GAAO,MAAK,CAAED,KAAMb,GAAYO,gBAAiBO,YAEjEI,GAAkB,SAAAJ,GAAO,MAAK,CAAED,KAAMb,GAAYQ,kBAAmBM,Y,kuCCpE3E,IAAMK,GAAgB/F,UAAOgG,KAAV,MAQbC,GAAYjG,UAAOkG,GAAV,MACX,qBAAG/F,MAAkBE,OAAOC,eAM1B6F,GAAenG,UAAOiB,KAAV,MAEd,qBAAGd,MAAkBE,OAAOgC,iBAI1B+D,GAAgBpG,UAAOgC,IAAV,MAQbqE,GAAkBrG,UAAOgC,IAAV,MAOfsE,GAAiBtG,UAAOgC,IAAV,MAQduE,GAAkBvG,UAAOgC,IAAV,M,s1BC5CrB,IAAMwE,GAAqBxG,UAAOC,OAAV,MAMT,qBAAGE,MAAkBE,OAAOE,QAK1B,qBAAGJ,MAAkBE,OAAOoG,QAQvCC,GAAY1G,UAAO2G,IAAV,MAMTC,GAAO5G,UAAO6G,KAAV,KAIbL,IAKSM,GAAwB9G,UAAOgC,IAAV,MC9BrB+E,GAAe,SAAAtG,GAAU,IAC5BuG,EAAavG,EAAbuG,SACR,OACE,kBAACF,GAAD,KACGE,EACC,kBAAC,KAAD,CACEC,UAAQ,EACRC,QAAS,CACPD,UAAU,EACVE,iBACAC,iBAAkB,CAChBC,oBAAqB,mBAGzBjE,OAAO,QACPD,MAAM,UAGR,kBAACqD,GAAuB/F,EACtB,kBAACiG,GAAD,CAAWvD,MAAM,KAAKC,OAAO,KAAKkE,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACtE,kBAACZ,GAAD,CACEa,SAAS,UACTC,SAAS,UACTC,EAAE,4iCC2LDC,GArLH,WAAM,MAEgBC,oBAAS,GAFzB,mBAETb,EAFS,KAECc,EAFD,KAIVC,EAAS5G,aAAY,SAAAC,GAAK,OAAIA,EAAM4G,gBAJ1B,EAeZ7G,aAAY,SAAAC,GACd,MAAO,CACLC,cAAeD,EAAMC,cACrBC,aAAcF,EAAME,aACpBC,aAAcH,EAAMG,aACpBC,WAAYJ,EAAMI,WAClB+C,SAAUnD,EAAMmD,SAChB0D,cAAe7G,EAAM6G,cACrBxG,WAAYL,EAAMK,WAClBgB,YAAarB,EAAMqB,gBAjBrBpB,EAPc,EAOdA,cACAC,EARc,EAQdA,aACAC,EATc,EASdA,aACAC,EAVc,EAUdA,WACA+C,EAXc,EAWdA,SACA0D,EAZc,EAYdA,cACAxG,EAbc,EAadA,WACAgB,EAdc,EAcdA,YAcIf,EAASD,EAAWE,QAAO,SAACC,EAAaC,GAC7C,OAAIA,EACKD,EAAc,EAEhBA,IACN,GAEGsG,EAAWC,cAEXC,EAAe,SAAAC,GACfA,GACFH,EJZmC,CAAEzC,KAAMb,GAAYM,gBAAiBQ,QIYhD2C,IACpB/G,GAAgBD,GAClB6G,EAAStC,MACTsC,EAAS3C,GAAiBZ,KAC1BuD,EAASvC,GAAe,KACxBuC,EAASpC,GAAgBxE,EAAe,IACxC4G,EAASrC,GAAc,MAEvBqC,EAAStC,MACTsC,EAASvC,GAAe,KACxBuC,EAAS3C,GAAiBZ,OAEnBnD,EAAaD,GACtB2G,EAAStC,MACTsC,EAAS3C,GAAiBZ,KAC1BuD,EAASvC,GAAe,KACxBuC,EAASrC,GAAcrE,EAAa,KAC3BF,GAAgBD,GACzB6G,EAAStC,MACTsC,EAAS3C,GAAiBZ,KAC1BuD,EAASpC,GAAgBxE,EAAe,IACxC4G,EAASrC,GAAc,IACvBqC,EAASvC,GAAe,OAExBuC,EAAStC,MACTsC,EAASvC,GAAe,KACxBuC,EAAS3C,GAAiBZ,OAIxB2D,EAAc,WAClBJ,EJjCmC,CAAEzC,KAAMb,GAAYK,qBIkCvD6C,GAAY,GACZ,IAAMS,EAAW,IAAIC,IAAY,CAC/BC,QAAS,MAEXF,EACGG,QACAC,MAAK,WACJC,YAAW,WACTL,EACGM,OACAC,SACAH,MAAK,YAAqB,IAAD,mBAAlBI,EAAkB,KAAVC,EAAU,KAClBC,EAAO,IAAIC,KAAKH,EAAQ,gBAAiB,CAC7CtD,KAAMuD,EAAKvD,KACX0D,aAAcC,KAAKC,QAErBvB,GAAY,GACZI,EJtHkB,SAACe,GAA+B,IAAzBK,EAAwB,uDAAb,aAChD,OAAO,SAAApB,GACL,IAAMqB,EAAW,IAAIC,SAErB,OADAD,EAASE,IAAI,OAAQR,GACdS,KAAM,CACXC,OAAQ,OACRC,IAAI,4CAAD,OAA8CtE,GAA9C,kBACHxB,KAAMyF,EACNM,QAAS,CACP,eAAe,uCAGhBlB,MAAK,SAAAmB,GACJ,GAA6B,OAAzBA,EAAShG,KAAKiG,OAAiB,CACjC,IAAMrE,EAAU,CACd/C,OAAQmH,EAAShG,KAAKiG,OAAOpH,OAC7BC,SAAUkH,EAAShG,KAAKiG,OAAOjH,MAC/BD,MAAOiH,EAAShG,KAAKiG,OAAOlH,MAC5BmB,WAAY8F,EAAShG,KAAKiG,OAAOC,OAAOC,KACxCvH,SAAUoH,EAAShG,KAAKiG,OAAOC,OAAOE,GACtCnG,UAAW+F,EAAShG,KAAKiG,OAAOC,OAAOnH,MAAMsH,aAE/CjC,EAAS,CAAEzC,KAAMb,GAAYE,wBAAyBY,YACtDwC,EAAS,CAAEzC,KAAMb,GAAYG,WAAYW,QAASf,UAElDuD,EAAS,CAAEzC,KAAMb,GAAYI,eAC7BsE,OAGHc,OAAM,SAAAC,GACLnC,EAAS,CAAEzC,KAAMb,GAAYI,eAC7BsE,QIwFQgB,CAAiBrB,GAAM,WACrBb,GAAa,YAIpB,QAEJgC,OAAM,SAAAG,GACLC,QAAQD,MAAM,uBAAwBA,OAoE5C,OACE,oCACE,kBAAC,EAAD,MACA,kBAACxE,GAAD,KACE,kBAACE,GAAD,KAjBqB,SAAA+B,GACzB,OAAQA,GACN,KAAKrD,GACH,MAAO,yBACT,KAAKA,GACH,MAAM,+BACR,KAAKA,GACH,MAAO,gBACT,QACE,MAAM,4BAQM8F,CAAmB1C,IAC9BA,IAAWpD,GACV,kBAACwB,GAAD,KACG8B,EAAgB,+BAAiC,oCAElD,KA1EY,SAAAyC,GACpB,OAAQA,GACN,KAAK/F,GACH,OACE,oCACE,kBAAC2B,GAAD,KACE,kBAAC,GAAD,CAAcqE,QAASrC,EAAatB,SAAUA,KAE/CzC,EAASqG,OAAS,kBAAC,EAAD,MAAe,MAGxC,KAAKjG,GACH,OACE,kBAACyB,GAAD,KACE,kBAAC,EAAD,MACA,kBAACC,GAAD,KACE,kBAAC,EAAD,CAAQnG,SAAO,EAACE,MAAM,QAAQuK,QAAS,kBAAMvC,GAAa,KAA1D,QAGA,kBAAC,EAAD,CAAQlI,SAAO,EAACE,MAAM,MAAMuK,QAAS,kBAAMvC,GAAa,KAAxD,SAIF,kBAAC,EAAD,CAAQhI,MAAM,OAAOuK,QAAS,kBAAME,OAAOC,KAAKrI,EAAYuB,WAAY,YAAxE,oBAGCO,EAASqG,OAAS,kBAAC,EAAD,MAAe,MAGxC,KAAKjG,GACH,OACE,oCACE,kBAAC4B,GAAD,KACE,2CAAiB7E,GACjB,kBAAC,EAAD,CACExB,SAAO,EACPE,MAAM,QACNuK,QAAS,WACPzC,EJnGe,CAAEzC,KAAMb,GAAYS,gBI+FvC,cAUDd,EAASqG,OAAS,kBAAC,EAAD,MAAe,MAGxC,QACE,OAAO,MA2BNG,CAAchD,MC1LViD,I,OACH,KADGA,GAEH,IAFGA,GAGH,KAHGA,GAIF,KAGE7K,GAAQ,CACnBE,OAAQ,CACNC,YAAa,UACb+B,cAAe,UACfoE,KAAM,UACNwE,MAAO,UACPC,IAAK,UACLC,UAAW,UACX5K,KAAM,WAER6K,KAAM,CACJC,WAAW,wBAEbC,OAAQ,CACNC,OAAO,eAAD,OAAiBP,GAAjB,OACNQ,OAAO,eAAD,OAAiBR,GAAjB,+BAAmDA,GAAc,EAAjE,OACNS,OAAO,eAAD,OAAiBT,GAAjB,+BAAmDA,GAAc,EAAjE,OACNU,QAAQ,eAAD,OAAiBV,GAAjB,+BAAmDA,GAAe,EAAlE,OACPW,WAAW,eAAD,OAAiBX,GAAjB,S,0BCVRY,GAAe,CACnBrH,SAAU,GACVlD,cAAe,EACfC,aAAc,EACdC,aAAc,EACdC,WAAY,EACZqK,iBAAkB,GAClBpJ,YAAa,GACbuF,aAAcrD,GACdsD,eAAe,EACfxG,WAAY,ICxCCqK,iBD2CA,WAAmC,IAAlC1K,EAAiC,uDAAzBwK,GAAcG,EAAW,uCAC/C,OAAQA,EAAOtG,MACb,KAAKb,GAAYE,wBACf,OAAO,gBAAK1D,EAAZ,CAAmBqB,YAAasJ,EAAOrG,UACzC,KAAKd,GAAYG,WACf,OAAO,gBAAK3D,EAAZ,CAAmB4G,aAAc+D,EAAOrG,UAE1C,KAAKd,GAAYI,aACf,OAAO,gBACF5D,EADL,CAEEqB,YAAa,KACbwF,eAAe,IAInB,KAAKrD,GAAYK,mBACf,OAAO,gBACF7D,EADL,CAEE6G,eAAe,IAGnB,KAAKrD,GAAYM,gBACf,IAAM8G,EAAgB5K,EAAMK,WAG5B,OADAuK,EAAcC,KAAKF,EAAOrG,SACnB,gBACFtE,EADL,CAEEK,WAAYuK,IAGhB,KAAKpH,GAAYC,wBACf,IAAKzD,EAAMqB,YACT,OAAOrB,EAET,GAA8C,IAA1C8K,OAAOC,KAAK/K,EAAMqB,aAAamI,OACjC,OAAOxJ,EAET,IAAMgL,EAAchL,EAAMmD,SAE1B,OADA6H,EAAYC,QAAQjL,EAAMqB,aACnB,gBACFrB,EADL,CAEEmD,SAAU6H,IAGd,KAAKxH,GAAYO,gBACf,OAAO,gBACF/D,EADL,CAEEI,WAAYuK,EAAOrG,UAIvB,KAAKd,GAAYQ,kBACf,OAAO,gBACFhE,EADL,CAEEE,aAAcyK,EAAOrG,UAGzB,KAAKd,GAAYS,YACf,MAAO,CACLd,SAAU,GACVlD,cAAe,EACfC,aAAc,EACdC,aAAc,EACdC,WAAY,EACZqK,iBAAkB,GAClBpJ,YAAa,CACXE,OAAQ,cACRC,SAAU,YACVC,MAAO,aACPmB,WAAY,IACZtB,SAAU,QACVqB,UACE,yGAEJiE,aAAcrD,GACdsD,eAAe,EACfxG,WAAY,IAIhB,QACE,OAAOL,KC5HwBkL,aAAgBC,OCFrDC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,IACf,mBH4CiB,SAAC,GAAD,IAAGhM,EAAH,EAAGA,SAAH,OACnB,kBAAC,gBAAD,CAAeP,MAAOA,IAEnBO,KG/CD,KACE,kBAAC,GAAD,QAGJiM,SAASC,eAAe,U","file":"static/js/main.712b7290.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst setHover = ({ color }) => {\n  switch (color) {\n    case 'green':\n      return 'linear-gradient(180deg, #58b684 0%, #4b936d 100%)';\n    case 'red':\n      return 'linear-gradient(180deg, #EB5353 0%, #BD4444 100%)';\n    case 'pink':\n      return 'linear-gradient(180deg, #D6BBD9 0%, #C8A3CC 100%)';\n    default:\n      return 'linear-gradient(180deg, #D6BBD9 0%, #C8A3CC 100%)';\n  }\n};\n\nexport const ButtonStyled = styled.button`\n  height: 50px;\n  ${({ primary }) => !primary && 'width: 100%;'}\n  padding: 15px 65px;\n  border: none;\n  border-radius: 6px;\n  background: ${({ theme, color }) => theme.colors[color]};\n  color: ${({ theme, primary }) => (primary ? theme.colors.textPrimary : theme.colors.dark)};\n  font-size: 14px;\n\n  &:hover {\n    cursor: pointer;\n    background: ${setHover};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonStyled } from './ButtonStyled';\n\nexport const Button = props => <ButtonStyled {...props}>{props.children}</ButtonStyled>;\n\nButton.propTypes = {\n  color: PropTypes.string,\n  primary: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nButton.defaultProps = {\n  color: 'pink',\n  primary: false,\n};\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 50px;\n`;\n\nexport const HeaderTitle = styled.h1`\n  margin: 0 0 0 5rem;\n  color: ${({ theme }) => theme.colors.textPrimary};\n  font-size: 18px;\n  font-weight: normal;\n`;\n","import styled from 'styled-components';\n\nexport const PointsStyled = styled.span`\n  margin-right: 5rem;\n  color: ${({ theme }) => theme.colors.textPrimary};\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { PointsStyled } from './PointsStyled';\n\nexport const Points = () => {\n  const { maximumRounds, currentRound, maximumTries, currentTry, gameResult } = useSelector(state => {\n    return {\n      maximumRounds: state.maximumRounds,\n      currentRound: state.currentRound,\n      maximumTries: state.maximumTries,\n      currentTry: state.currentTry,\n      gameResult: state.gameResult,\n    };\n  });\n\n  const points = gameResult.reduce((accumulator, currentValue) => {\n    if (currentValue) {\n      return accumulator + 1;\n    }\n    return accumulator;\n  }, 0);\n  return (\n    <PointsStyled>\n      My points: {points} Game round: {currentRound - 1}/{maximumRounds}\n    </PointsStyled>\n  );\n};\n","import React from 'react';\nimport { HeaderStyled, HeaderTitle } from './HeaderStyled';\nimport { Points } from '../Points';\n\nexport const Header = () => {\n  return (\n    <HeaderStyled>\n      <HeaderTitle>akinator</HeaderTitle>\n      <Points />\n    </HeaderStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SongResultBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n\nexport const FrameBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 30px 34px 134px rgba(0, 0, 0, 0.35);\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: space-around;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SongInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nexport const AlbumInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.textSecondary};\n  font-size: 14px;\n`;\n\nexport const SongName = styled.span`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nexport const SongArtist = styled.span`\n  color: ${({ theme }) => theme.colors.textSecondary};\n  font-size: 14px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { SongResultBox, FrameBox, InfoBox, SongInfo, AlbumInfo, SongName, SongArtist } from './SongResultStyled';\n\nexport const SongResult = () => {\n  const currentSong = useSelector(state => state.currentSong);\n  const { deezerId, artist, songName, album } = currentSong;\n  return (\n    <SongResultBox>\n      <FrameBox>\n        <iframe\n          title=\"deezer\"\n          scrolling=\"no\"\n          frameBorder=\"0\"\n          allowTransparency=\"true\"\n          src={`https://www.deezer.com/plugins/player?format=square&autoplay=false&playlist=false&width=300&height=300&color=ff0000&layout=dark&size=medium&type=tracks&id=${deezerId}&app_id=1`}\n          width=\"200\"\n          height=\"200\"\n        />\n      </FrameBox>\n      <InfoBox>\n        <SongInfo>\n          <SongName>{songName}</SongName>\n          <SongArtist>{artist}</SongArtist>\n        </SongInfo>\n        <AlbumInfo>\n          <span>Album:</span>\n          <span>{album}</span>\n        </AlbumInfo>\n      </InfoBox>\n    </SongResultBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SongListItemStyled = styled.li`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0.5rem 0 0 0;\n  padding: 15px;\n  width: calc(100% - 2px);\n  border: 1px solid transparent;\n  cursor: pointer;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.dark};\n    border: 1px solid #292a2c;\n    border-radius: 6px;\n  }\n`;\n\nexport const Image = styled.img`\n  box-shadow: 30px 34px 134px rgba(0, 0, 0, 0.35);\n  border-radius: 3px;\n`;\n\nexport const Link = styled.a`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  text-decoration: none;\n`;\n\nexport const ColumeDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 30px;\n`;\n\nexport const RowDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: '100%';\n  aling-item: 'center';\n`;\n","import React from 'react';\nimport { SongListItemStyled, Image, Link, ColumeDiv, RowDiv } from './SongListItemStyled';\n\nexport const SongListItem = ({ data }) => {\n  const { songName, album, artist, songImage, deezerLink } = data;\n\n  return (\n    <Link target=\"_blank\" href={deezerLink}>\n      <SongListItemStyled>\n        <RowDiv>\n          <Image src={songImage} alt={songName} />\n          <ColumeDiv>\n            <span>{songName}</span>\n            <span>{album}</span>\n          </ColumeDiv>\n        </RowDiv>\n        <span>{artist}</span>\n      </SongListItemStyled>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SongListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  list-style: none;\n  margin: 1rem 0 0 0;\n  padding: 0;\n  max-width: 600px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { SongListItem } from '../SongListItem';\nimport { SongListStyled } from './SongListStyled';\n\nexport const SongList = () => {\n  const songList = useSelector(state => state.songList);\n\n  const songListRender = arr => {\n    return arr.map(song => {\n      return <SongListItem key={song.deezerId} data={song} />;\n    });\n  };\n  return <SongListStyled>{songListRender(songList)}</SongListStyled>;\n};\n","const ACTION_TYPE = {\n  SET_SONG_OBJECT_IN_LIST: 'SET_SONG_OBJECT_IN_LIST',\n  SET_CURRENT_SONG_OBJECT: 'SET_CURRENT_SONG_OBJECT',\n  SET_SCREEN: 'SET_SCREEN',\n  DEZEER_ERROR: 'DEZEER_ERROR',\n  RESET_DEZEER_ERROR: 'RESET_DEZEER_ERROR',\n  SET_GAME_RESULT: 'SET_GAME_RESULT',\n  SET_CURRENT_TRY: 'SET_CURRENT_TRY',\n  SET_CURRENT_ROUND: 'SET_CURRENT_ROUND',\n  RESET_STORE: 'RESET_STORE',\n};\n\nexport const SCREENS = {\n  MAIN_SCREEN: 'MAIN_SCREEN',\n  SONG_SCREEN: 'SONG_SCREEN',\n  RESULT_SCREEN: 'RESULT_SCREEN',\n};\n\nexport default ACTION_TYPE;\n","import axios from 'axios';\nimport ACTION_TYPE, { SCREENS } from './constants';\n\nconst accestTokken = '4f4560649da234063527f04c3d8c7951';\n\nexport const getSongByHumming = (file, callBack = () => {}) => {\n  return dispatch => {\n    const formData = new FormData();\n    formData.set('file', file);\n    return axios({\n      method: 'post',\n      url: `https://api.audd.io/recognize/?api_token=${accestTokken}&return=deezer`,\n      data: formData,\n      headers: {\n        'content-type': `multipart/form-data; boundary=mp3`,\n      },\n    })\n      .then(response => {\n        if (response.data.result !== null) {\n          const payload = {\n            artist: response.data.result.artist,\n            songName: response.data.result.title,\n            album: response.data.result.album,\n            deezerLink: response.data.result.deezer.link,\n            deezerId: response.data.result.deezer.id,\n            songImage: response.data.result.deezer.album.cover_small,\n          };\n          dispatch({ type: ACTION_TYPE.SET_CURRENT_SONG_OBJECT, payload });\n          dispatch({ type: ACTION_TYPE.SET_SCREEN, payload: SCREENS.SONG_SCREEN });\n        } else {\n          dispatch({ type: ACTION_TYPE.DEZEER_ERROR });\n          callBack();\n        }\n      })\n      .catch(err => {\n        dispatch({ type: ACTION_TYPE.DEZEER_ERROR });\n        callBack();\n      });\n  };\n};\n\nexport const getSongByLyrics = searchString => {\n  return dispatch => {\n    return axios\n      .get(`https://api.audd.io/findLyrics/?api_token=${accestTokken}&q=${searchString}&return=deezer`, {\n        return: 'deezer',\n      })\n      .then(response => {\n        if (response.data.status === 'success') {\n          const song = response.data.result[0];\n          dispatch({ type: ACTION_TYPE.SET_CURRENT_SONG_OBJECT, payload: song });\n          // getSongFromLastFm(song.title);\n        }\n      })\n      .catch(err => console.log(err));\n  };\n};\n\nexport const setCurrentScreen = screenId => {\n  return { type: ACTION_TYPE.SET_SCREEN, payload: screenId };\n};\n\nexport const setRaundResult = result => ({ type: ACTION_TYPE.SET_GAME_RESULT, payload: result });\n\nexport const setCurrentSong = song => ({ type: ACTION_TYPE.SET_CURRENT_SONG_OBJECT, payload: song });\n\nexport const pushSongInSongList = () => ({ type: ACTION_TYPE.SET_SONG_OBJECT_IN_LIST });\n\nexport const setCurrentTry = payload => ({ type: ACTION_TYPE.SET_CURRENT_TRY, payload });\n\nexport const setCurrentRound = payload => ({ type: ACTION_TYPE.SET_CURRENT_ROUND, payload });\n\nexport const resetDezeerError = () => ({ type: ACTION_TYPE.RESET_DEZEER_ERROR });\n\nexport const resetStore = () => ({ type: ACTION_TYPE.RESET_STORE });\n\n// export const pushSetCurrentTry = payload => ({ type: ACTION_TYPE.SET_CURRENT_TRY, payload });\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 7rem;\n`;\n\nexport const MainTitle = styled.h2`\n  color: ${({ theme }) => theme.colors.textPrimary};\n  font-size: 36px;\n  margin-bottom: 1.5rem;\n  font-weight: normal;\n`;\n\nexport const MainSubtitle = styled.span`\n  margin-bottom: 4rem;\n  color: ${({ theme }) => theme.colors.textSecondary};\n  font-size: 22px;\n`;\n\nexport const GameContainer = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n  min-width: 360px;\n`;\n\nexport const AnswerContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 1.2rem;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  min-width: 550px;\n  margin-bottom: 4rem;\n`;\n\nexport const ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-item: center;\n  justify-content: space-evenly;\n  text-align: center;\n  height: 120px;\n`;\n","import styled from 'styled-components';\n\nexport const RecordButtonStyled = styled.button`\n  position: relative;\n  width: 128px;\n  height: 128px;\n  border: none;\n  border-radius: 100%;\n  background-color: ${({ theme }) => theme.colors.dark};\n  transition: background-color 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.colors.pink};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const MicroIcon = styled.svg`\n  position: absolute;\n  top: 42px;\n  left: 50px;\n`;\n\nexport const Path = styled.path`\n  fill: #828385;\n  transition: 0.3s;\n\n  ${RecordButtonStyled}:hover & {\n    fill: #1f2023;\n  }\n`;\n\nexport const RecordButtonContainer = styled.div`\n  transition: 0.3s;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 350px;\n`;\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport animationData from '../../animation/microAnimation.json';\n\nimport { RecordButtonStyled, MicroIcon, Path, RecordButtonContainer } from './RecordButtonStyled';\n\nexport const RecordButton = props => {\n  const { isRecord } = props;\n  return (\n    <RecordButtonContainer>\n      {isRecord ? (\n        <Lottie\n          autoplay\n          options={{\n            autoplay: true,\n            animationData,\n            rendererSettings: {\n              preserveAspectRatio: 'xMidYMid slice',\n            },\n          }}\n          height=\"344px\"\n          width=\"344px\"\n        />\n      ) : (\n        <RecordButtonStyled {...props}>\n          <MicroIcon width=\"28\" height=\"44\" viewBox=\"0 0 14 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <Path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14 11.0851C14 10.7169 13.7049 10.4181 13.3349 10.4181C12.9649 10.4181 12.6698 10.7169 12.6698 11.0851C12.6698 14.2106 10.1265 16.7534 6.99766 16.7534C3.87354 16.7534 1.33021 14.2106 1.33021 11.0851C1.33021 10.7169 1.03513 10.4181 0.665105 10.4181C0.295082 10.4181 0 10.7169 0 11.0851C0 14.7211 2.7822 17.716 6.33255 18.0537V19.9431H3.18501C2.81499 19.9431 2.51522 20.242 2.51522 20.6101C2.51522 20.9783 2.81499 21.2771 3.18501 21.2771H10.815C11.185 21.2771 11.4848 20.9783 11.4848 20.6101C11.4848 20.242 11.185 19.9431 10.815 19.9431H7.66745V18.0537C11.2178 17.716 14 14.7211 14 11.0851ZM5.26008 3.68672C5.26008 2.78743 5.99076 2.05675 6.89006 2.05675H7.1102C8.0095 2.05675 8.74018 2.78743 8.74018 3.68672V11.5111C8.74018 12.4099 8.0095 13.1411 7.1102 13.1411H6.89006C5.99076 13.1411 5.26008 12.4099 5.26008 11.5111V3.68672ZM6.88986 14.4749H7.11C8.74466 14.4749 10.0702 13.1456 10.0702 11.5109V3.68659C10.0702 2.0524 8.74466 0.722656 7.11 0.722656H6.88986C5.2552 0.722656 3.92499 2.0524 3.92499 3.68659V11.5109C3.92499 13.1456 5.2552 14.4749 6.88986 14.4749Z\"\n            />\n          </MicroIcon>\n        </RecordButtonStyled>\n      )}\n    </RecordButtonContainer>\n  );\n};\n","import React, { useState } from 'react';\nimport MicRecorder from 'mic-recorder-to-mp3';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from './components';\nimport { Header } from './components/Header';\nimport { SongResult } from './components/SongResult';\nimport { SongList } from './components/SongList';\n\nimport {\n  getSongByLyrics,\n  getSongByHumming,\n  setRaundResult,\n  setCurrentScreen,\n  setCurrentSong,\n  pushSongInSongList,\n  setCurrentTry,\n  setCurrentRound,\n  resetDezeerError,\n  resetStore,\n} from './redux/actions';\n\nimport {\n  MainContainer,\n  MainTitle,\n  MainSubtitle,\n  GameContainer,\n  AnswerContainer,\n  InputContainer,\n  ResultContainer,\n} from './AppStyled';\n// import { Input } from './components/Input';\nimport { RecordButton } from './components/RecordButton';\nimport { SCREENS } from './redux/constants';\n\nconst App = () => {\n  // const [songInputValue, setSongInputValue] = useState('');\n  const [isRecord, setIsRecord] = useState(false);\n  // const currentSong = useSelector(state => state.currentSong);\n  const screen = useSelector(state => state.curentScreen);\n\n  const {\n    maximumRounds,\n    currentRound,\n    maximumTries,\n    currentTry,\n    songList,\n    isDeezerError,\n    gameResult,\n    currentSong,\n  } = useSelector(state => {\n    return {\n      maximumRounds: state.maximumRounds,\n      currentRound: state.currentRound,\n      maximumTries: state.maximumTries,\n      currentTry: state.currentTry,\n      songList: state.songList,\n      isDeezerError: state.isDeezerError,\n      gameResult: state.gameResult,\n      currentSong: state.currentSong,\n    };\n  });\n\n  const points = gameResult.reduce((accumulator, currentValue) => {\n    if (currentValue) {\n      return accumulator + 1;\n    }\n    return accumulator;\n  }, 0);\n\n  const dispatch = useDispatch();\n\n  const userAnswered = answer => {\n    if (answer) {\n      dispatch(setRaundResult(answer));\n      if (currentRound <= maximumRounds) {\n        dispatch(pushSongInSongList());\n        dispatch(setCurrentScreen(SCREENS.MAIN_SCREEN));\n        dispatch(setCurrentSong({}));\n        dispatch(setCurrentRound(currentRound + 1));\n        dispatch(setCurrentTry(1));\n      } else {\n        dispatch(pushSongInSongList());\n        dispatch(setCurrentSong({}));\n        dispatch(setCurrentScreen(SCREENS.RESULT_SCREEN));\n      }\n    } else if (currentTry < maximumTries) {\n      dispatch(pushSongInSongList());\n      dispatch(setCurrentScreen(SCREENS.MAIN_SCREEN));\n      dispatch(setCurrentSong({}));\n      dispatch(setCurrentTry(currentTry + 1));\n    } else if (currentRound <= maximumRounds) {\n      dispatch(pushSongInSongList());\n      dispatch(setCurrentScreen(SCREENS.MAIN_SCREEN));\n      dispatch(setCurrentRound(currentRound + 1));\n      dispatch(setCurrentTry(1));\n      dispatch(setCurrentSong({}));\n    } else {\n      dispatch(pushSongInSongList());\n      dispatch(setCurrentSong({}));\n      dispatch(setCurrentScreen(SCREENS.RESULT_SCREEN));\n    }\n  };\n\n  const recordVoice = () => {\n    dispatch(resetDezeerError());\n    setIsRecord(true);\n    const recorder = new MicRecorder({\n      bitRate: 128,\n    });\n    recorder\n      .start()\n      .then(() => {\n        setTimeout(() => {\n          recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n              const file = new File(buffer, 'uglyVoise.mp3', {\n                type: blob.type,\n                lastModified: Date.now(),\n              });\n              setIsRecord(false);\n              dispatch(\n                getSongByHumming(file, () => {\n                  userAnswered(false);\n                })\n              );\n            });\n        }, 5000);\n      })\n      .catch(error => {\n        console.error('Error whith recorder', error);\n      });\n  };\n  const screenHandler = currentScreen => {\n    switch (currentScreen) {\n      case SCREENS.MAIN_SCREEN:\n        return (\n          <>\n            <InputContainer>\n              <RecordButton onClick={recordVoice} isRecord={isRecord} />\n            </InputContainer>\n            {songList.length ? <SongList /> : null}\n          </>\n        );\n      case SCREENS.SONG_SCREEN:\n        return (\n          <GameContainer>\n            <SongResult />\n            <AnswerContainer>\n              <Button primary color=\"green\" onClick={() => userAnswered(true)}>\n                Yeap\n              </Button>\n              <Button primary color=\"red\" onClick={() => userAnswered(false)}>\n                Nope\n              </Button>\n            </AnswerContainer>\n            <Button color=\"pink\" onClick={() => window.open(currentSong.deezerLink, '_blank')}>\n              Listen in deezer\n            </Button>\n            {songList.length ? <SongList /> : null}\n          </GameContainer>\n        );\n      case SCREENS.RESULT_SCREEN:\n        return (\n          <>\n            <ResultContainer>\n              <span>My point: {points}</span>\n              <Button\n                primary\n                color=\"green\"\n                onClick={() => {\n                  dispatch(resetStore());\n                }}\n              >\n                Try Again\n              </Button>\n            </ResultContainer>\n            {songList.length ? <SongList /> : null}\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const screenTitleHandler = curentScreen => {\n    switch (curentScreen) {\n      case SCREENS.MAIN_SCREEN:\n        return 'Try to beat me, human!';\n      case SCREENS.SONG_SCREEN:\n        return `I had a result! Is it right?`;\n      case SCREENS.RESULT_SCREEN:\n        return 'Game is over.';\n      default:\n        return `I'm listening carefully.`;\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <MainContainer>\n        <MainTitle>{screenTitleHandler(screen)}</MainTitle>\n        {screen === SCREENS.MAIN_SCREEN ? (\n          <MainSubtitle>\n            {isDeezerError ? 'Nothing found. Try it again.' : 'Write audio to recognize a song.'}\n          </MainSubtitle>\n        ) : null}\n        {screenHandler(screen)}\n      </MainContainer>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { ThemeProvider, GlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\nimport PropTypes from 'prop-types';\n\n// const GlobalStyle = injectGrobalStyled`\n// \t${normalize}\n\n// \t@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n// \t* {\n// \t\tmargin: 0;\n// \t\tbox-sizing: border-box;\n// \t}\n\n// \thtml,\n// \tbody {\n// \t\tfont-family: ${({ theme }) => theme.text.fontFamily};\n// \t\tcolor: ${({ theme }) => theme.colors.textPrimary};\n//     background-color: ${({ theme }) => theme.colors.lightDark};\n// \t}\n\n// `;\n\nexport const size = {\n  mobile: 500,\n  tablet: 769,\n  laptop: 1024,\n  desktop: 1500,\n};\n\nexport const theme = {\n  colors: {\n    textPrimary: '#E9EAEA',\n    textSecondary: '#828385',\n    pink: '#C7A1CB',\n    green: '#58B684',\n    red: '#EB5353',\n    lightDark: '#1F2023',\n    dark: '#1C1D1F',\n  },\n  text: {\n    fontFamily: `'Roboto', sans-serif`,\n  },\n  device: {\n    mobile: `(max-width: ${size.mobile}px)`,\n    tablet: `(min-width: ${size.mobile}px) and (max-width: ${size.tablet - 1}px)`,\n    laptop: `(min-width: ${size.tablet}px) and (max-width: ${size.laptop - 1}px)`,\n    desktop: `(min-width: ${size.laptop}px) and (max-width: ${size.desktop - 1}px)`,\n    wideScreen: `(min-width: ${size.desktop}px)`,\n  },\n};\n\nexport const Theme = ({ children }) => (\n  <ThemeProvider theme={theme}>\n    {/* <GlobalStyle /> */}\n    {children}\n  </ThemeProvider>\n);\n\nTheme.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import ACTION_TYPE, { SCREENS } from './constants';\n\n// {\n//   artist: 'Test artist',\n//   songName: 'test song',\n//   album: 'test album',\n//   deezerLink: '#',\n//   deezerId: 3148104,\n//   songImage:\n//     'https://e-cdns-images.dzcdn.net/images/cover/fd195b4bc5112d75704acf0154039ccf/56x56-000000-80-0-0.jpg',\n// },\n// {\n//   artist: 'Test artist',\n//   songName: 'test song',\n//   album: 'test album',\n//   deezerLink: '#',\n//   deezerId: 3148104,\n//   songImage:\n//     'https://e-cdns-images.dzcdn.net/images/cover/fd195b4bc5112d75704acf0154039ccf/56x56-000000-80-0-0.jpg',\n// },\n// {\n//   artist: 'Test artist',\n//   songName: 'test song',\n//   album: 'test album',\n//   deezerLink: '#',\n//   deezerId: 3148104,\n//   songImage:\n//     'https://e-cdns-images.dzcdn.net/images/cover/fd195b4bc5112d75704acf0154039ccf/56x56-000000-80-0-0.jpg',\n// },\n// {\n//   artist: 'Test artist',\n//   songName: 'test song',\n//   album: 'test album',\n//   deezerLink: '#',\n//   deezerId: 3148104,\n//   songImage:\n//     'https://e-cdns-images.dzcdn.net/images/cover/fd195b4bc5112d75704acf0154039ccf/56x56-000000-80-0-0.jpg',\n// },\n\nconst initialState = {\n  songList: [],\n  maximumRounds: 5,\n  currentRound: 1,\n  maximumTries: 3,\n  currentTry: 1,\n  songValueInInput: '',\n  currentSong: {},\n  curentScreen: SCREENS.MAIN_SCREEN,\n  isDeezerError: false,\n  gameResult: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPE.SET_CURRENT_SONG_OBJECT:\n      return { ...state, currentSong: action.payload };\n    case ACTION_TYPE.SET_SCREEN: {\n      return { ...state, curentScreen: action.payload };\n    }\n    case ACTION_TYPE.DEZEER_ERROR: {\n      return {\n        ...state,\n        currentSong: null,\n        isDeezerError: true,\n      };\n    }\n\n    case ACTION_TYPE.RESET_DEZEER_ERROR: {\n      return {\n        ...state,\n        isDeezerError: false,\n      };\n    }\n    case ACTION_TYPE.SET_GAME_RESULT: {\n      const newGameResult = state.gameResult;\n\n      newGameResult.push(action.payload);\n      return {\n        ...state,\n        gameResult: newGameResult,\n      };\n    }\n    case ACTION_TYPE.SET_SONG_OBJECT_IN_LIST: {\n      if (!state.currentSong) {\n        return state;\n      }\n      if (Object.keys(state.currentSong).length === 0) {\n        return state;\n      }\n      const newSongList = state.songList;\n      newSongList.unshift(state.currentSong);\n      return {\n        ...state,\n        songList: newSongList,\n      };\n    }\n    case ACTION_TYPE.SET_CURRENT_TRY: {\n      return {\n        ...state,\n        currentTry: action.payload,\n      };\n    }\n\n    case ACTION_TYPE.SET_CURRENT_ROUND: {\n      return {\n        ...state,\n        currentRound: action.payload,\n      };\n    }\n    case ACTION_TYPE.RESET_STORE: {\n      return {\n        songList: [],\n        maximumRounds: 5,\n        currentRound: 1,\n        maximumTries: 3,\n        currentTry: 1,\n        songValueInInput: '',\n        currentSong: {\n          artist: 'Test artist',\n          songName: 'test song',\n          album: 'test album',\n          deezerLink: '#',\n          deezerId: 3148104,\n          songImage:\n            'https://e-cdns-images.dzcdn.net/images/cover/fd195b4bc5112d75704acf0154039ccf/56x56-000000-80-0-0.jpg',\n        },\n        curentScreen: SCREENS.MAIN_SCREEN,\n        isDeezerError: false,\n        gameResult: [],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n// let composeEnhancers = compose;\n\n// composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ || compose;\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { Theme } from './Theme';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Theme>\n      <App />\n    </Theme>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}